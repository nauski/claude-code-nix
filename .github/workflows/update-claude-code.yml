name: Update Claude Code Version

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check for updates
        id: check
        run: |
          # Get current version from package.nix
          CURRENT_VERSION=$(grep -oP 'version = "\K[^"]+' package.nix)
          echo "Current version: $CURRENT_VERSION"
          
          # Get latest version from npm
          LATEST_VERSION=$(npm view @anthropic-ai/claude-code version)
          echo "Latest version: $LATEST_VERSION"
          
          # Set outputs
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "latest=$LATEST_VERSION" >> $GITHUB_OUTPUT
          
          # Check if update is needed
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update version in package.nix
        if: steps.check.outputs.update_needed == 'true'
        run: |
          # Update version in package.nix
          sed -i "s/version = \".*\"/version = \"${{ steps.check.outputs.latest }}\"/" package.nix
          
          # Also update the comment to reflect the change
          sed -i "s/# Update this to install a newer version/# Update this to install a newer version/" package.nix

      - name: Update flake.lock
        if: steps.check.outputs.update_needed == 'true'
        run: |
          # Install Nix
          curl -L https://nixos.org/nix/install | sh -s -- --daemon --yes
          
          # Source Nix
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          
          # Update flake.lock
          nix flake update

      - name: Create Pull Request
        if: steps.check.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update claude-code to version ${{ steps.check.outputs.latest }}"
          title: "chore: update claude-code to version ${{ steps.check.outputs.latest }}"
          body: |
            ## Automated Claude Code Update
            
            This PR updates Claude Code from version `${{ steps.check.outputs.current }}` to `${{ steps.check.outputs.latest }}`.
            
            ### Changes
            - Updated `version` in `package.nix`
            - Updated `flake.lock` with new derivation hash
            
            ### Verification Checklist
            - [ ] Version number is correctly updated in `package.nix`
            - [ ] `flake.lock` has been updated
            - [ ] The new version builds successfully
            - [ ] Basic functionality works as expected
            
            ---
            
            To test this update locally:
            ```bash
            nix build
            ./result/bin/claude --version
            ```
            
            This PR was automatically generated by the update workflow.
          branch: update-claude-code-${{ steps.check.outputs.latest }}
          delete-branch: true
          labels: |
            dependencies
            automated

      - name: Summary
        if: always()
        run: |
          echo "## Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Current Version:** ${{ steps.check.outputs.current }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Latest Version:** ${{ steps.check.outputs.latest }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Update Needed:** ${{ steps.check.outputs.update_needed }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check.outputs.update_needed }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Pull request created for version update!" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ Already up to date!" >> $GITHUB_STEP_SUMMARY
          fi